Help Document 

# Command to install angular cli
  * npm install -g @angular/cli

# Command for creating new project :
  The Angular CLI makes it easy to create an application that already works, right out of the box.
  It already follows our best practices!

  * Command: ng new <Project-Name>
  * Example: ng new newApplication

# Command for genrating components , routes ,service and pipes with simple command
  The CLI will also create simple test shells for all of these.

  * Command for component: ng genrate components <component_name> OR ng g c <component_name>
  * Example: ng g c loginComponent OR ng genrate component loginComponent
  

# Command to start server(Easily test your app locally while developing)
  * ng serve

Video 5: Angular 4 - Using Bootstrap
 #Command to use BootStrap in project:
   Before running following command you must be in project dir/folder, so that we inheriate bootstrap in our angular project
   *npm install bootstrap --save
   
   * now open file .angular-cli.json and add following line in styles tag :
     '../node_modules/bootstrap/dist/css/bootstrap.min.css'
   
  # Alternative way to inteherite bootstrap : https://ng-bootstrap.github.io/#/getting-started
    * npm install --save @ng-bootstrap/ng-bootstrap
      Once installed you need to import our main module.

     import {NgbModule} from '@ng-bootstrap/ng-bootstrap';
     The only remaining part is to list the imported module in your root module and any additional
     application modules that make use of the components in this library. The exact method will be slightly
     different for the root (top-level) module for which you should end up with the code similar to 
     (notice NgbModule.forRoot()):

     import {NgbModule} from '@ng-bootstrap/ng-bootstrap';

     @NgModule({
       declarations: [AppComponent, ...],
       imports: [NgbModule.forRoot(), ...],
       bootstrap: [AppComponent]
     })
     export class AppModule {
     }
     Other modules in your application can simply import NgbModule:

     import {NgbModule} from '@ng-bootstrap/ng-bootstrap';

     @NgModule({
       declarations: [OtherComponent, ...],
       imports: [NgbModule, ...]
     })
     export class OtherModule {
     }


Video 6 to Video 9 ( Data binding )

   1. Property binding [component => view]
      There are 3 ways for property binding ,using double courly braces , using square bracket and using bind tag
      * <img src="{{angularLogo}}">
      * <img [src]="angularLogo">
      * <img bind-src="angularLogo">
    
   2. Event Binding ( view ==> Component)
      we can bind this on event only like below
      (click)="MyMethod()"
      (focus)="MyMethod()"
      (blur)="MyMethod()"
      (submit)="MyMethod()"
      (copy)="MyMethod()"
      (paste)="MyMethod()"
      (scroll)="MyMethod()"
      (keydown)="MyMethod()"
      
   3. Two way Binding 
   
      NgModel=
      
